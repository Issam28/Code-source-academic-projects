
 
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.ScrollPane;
import java.awt.TextArea;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.RandomAccessFile;
import java.nio.channels.FileChannel;
import java.nio.channels.FileLock;
import java.nio.channels.OverlappingFileLockException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author walid-wam
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.getContentPane().setBackground(Color.LIGHT_GRAY);  
    }

    /**
     * This method is    from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea1 = new java.awt.TextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 153, 255));
        setFont(new java.awt.Font("Malgun Gothic", 0, 10)); // NOI18N
        setIconImages(null);

        jButton1.setBackground(new java.awt.Color(51, 255, 51));
        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("jButton1");

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");

        jButton4.setText("Site");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Etat");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("SC");

        jButton7.setText("Jeton");

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 255));
        jMenuBar1.setForeground(new java.awt.Color(204, 204, 255));

        jMenu3.setText("Fichier");

        jMenuItem2.setText("Open Log");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
               try{
                   this.jButton4.getText();
                    InputStream flux=new FileInputStream(this.jButton4.getText()+"r.txt"); 
                    InputStreamReader lecture=new InputStreamReader(flux);
                    BufferedReader buff=new BufferedReader(lecture);
                    String ligne,s="";
                    while ((ligne=buff.readLine())!=null){
                            System.out.println(ligne);
                            s=s+ligne+"\n";    
                    }
                     JOptionPane jop1, jop2, jop3;      
                    jop1 = new JOptionPane();
                   TextArea d = new TextArea(20,30);
                  
                   d.setText(s);
                    //ImageIcon img = new ImageIcon("images/information.png");
                    JOptionPane.showMessageDialog(null,d,"Log "+this.jButton4.getText(),JOptionPane.INFORMATION_MESSAGE);
                  //  jop1.showMessageDialog(null, s, "Information", JOptionPane.INFORMATION_MESSAGE, null);
                    buff.close(); 
                    }		
                    catch (Exception e){
                    System.out.println(e.toString());
                      }
                   
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
     public void msjlog(int numsite ,String buf ) throws FileNotFoundException, IOException{
                                  try {
                                      String nom="site"+numsite+"r.txt";
						File file = new File(nom); 
						FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
						BufferedWriter bw = new BufferedWriter(fw);
						bw.write(buf);
						bw.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
                }
          public void whrite1(int numsite   ) throws FileNotFoundException, IOException{
                                  try {
                                      new File("etat"+numsite+"r.txt").delete();
                                      new File("etat"+numsite+"r.txt").createNewFile();
                                      String nom="etat"+numsite+"r.txt";
						File file = new File(nom); 
						FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
						BufferedWriter bw = new BufferedWriter(fw);
						bw.write("1");
						bw.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
                }
    public   void Aplication(String num  ) throws InterruptedException, IOException {
		int my_id = Integer.parseInt(num);
		int counter = 0;
		int sleep =0;
                /****************************************/
                whrite1(my_id);
                new File("site"+my_id+"r.txt").delete();
                new File("site"+my_id+"r.txt").createNewFile();
                jButton1.setText("Actif");
                jButton1.setBackground(Color.green);
                jButton2.setText("En dehors de SC");
                jButton2.setBackground(Color.red);
                jButton4.setText("site"+my_id);
                jButton4.setBackground(Color.CYAN);
                jButton5.setBackground(Color.CYAN);
                jButton6.setBackground(Color.CYAN);
                jButton7.setBackground(Color.CYAN);
                /************************************************************/
		DistMutEx distributedMutex = new DistMutEx(my_id,  jButton1,jButton2,jButton3);
		Random ran = new Random();
		while (true){
			try {
						
						sleep = ran.nextInt(4000);
						Thread.sleep(sleep+1000);
						
					} catch (InterruptedException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
			//counter++;
                         
			while (distributedMutex.csEnter(this.jButton1,this.jButton2,this.jButton3)) {
				//counter++;
				//boolean gotToken = distributedMutex.csEnter();
			//	if (gotToken) {
					try {
						
						File file = new File("site.txt");
						
						// if file doesnt exists, then create it
						if (!file.exists()) {
							file.createNewFile();
							FileChannel channel = new RandomAccessFile(file, "rw").getChannel(); //ad now
							//ad now
							
							String content = "cs-enter pid" + my_id+"\n";
                                                        this.jButton2.setText("En SC");
                                                        this.jButton1.setText("En SC");
                                                        this.jButton2.setBackground(Color.GREEN);
                                                        //msjlog(my_id,content);
							try {
								
								FileLock lock = channel.tryLock();
					        } catch (OverlappingFileLockException e) {
					        	content = content + " locked";
					            // File is already locked in this thread or virtual machine
					        }
							channel.close();
							
							
							//String content = "cs-enter pid" + my_id;
							FileWriter fw = new FileWriter(file.getAbsoluteFile());
							BufferedWriter bw = new BufferedWriter(fw);
							bw.write(content);
							bw.close();
						}
						else{
							FileChannel channel = new RandomAccessFile(file, "rw").getChannel(); //ad now
							//FileLock lock = channel.lock(); //ad now
							String content = "\ncs-enter pid" + my_id;
                                                        this.jButton2.setText("En SC");
                                                        this.jButton1.setText("En SC");
                                                        this.jButton2.setBackground(Color.GREEN);
                                                        //msjlog(my_id,content);
							try {
								FileLock lock = channel.tryLock();
					        } catch (OverlappingFileLockException e) {
					        	content = content + " locked";
					            // File is already locked in this thread or virtual machine
					        }
							//lock.release();
							channel.close();
							FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
							   content = "\ncs-enter pid" + my_id;
                                                        this.jButton2.setText("En SC");
                                                        this.jButton1.setText("En SC");
                                                        this.jButton2.setBackground(Color.GREEN);
                                                          // msjlog(my_id,content);
							BufferedWriter bw = new BufferedWriter(fw);
							bw.write(content);
							bw.close();
							System.out.println("entering....");
						}
						
						
						
					} catch (IOException e) {
					}
					//entering CS
					try {
						   System.out.println("\n\nTHIS IS MY "+counter+" TIME IN CS :)\n\n"); 
                                                   //this.jButton1.setText("\n\nTHIS IS MY "+counter+" TIME IN CS :)\n\n");
                                                   msjlog(my_id,"\nEntrer en SC pour la "+counter+" ième fois");
                                                   sleep = ran.nextInt(1000);
					           Thread.sleep(sleep+1000);
						   Thread.sleep(100);
					} catch (InterruptedException e1) {
						   // TODO Auto-generated catch block
						   e1.printStackTrace();
					}
					try {
						File file = new File("site.txt");
						FileChannel channel = new RandomAccessFile(file, "rw").getChannel(); //ad now
						//FileLock lock = channel.lock(); //ad now
						String content = "\ncs-exit pid" + my_id;
                                                msjlog(my_id,"\nSortir de la SC");
                                                this.jButton1.setText("Sortir de la SC");
                                                this.jButton2.setBackground(Color.RED);
                                                this.jButton2.setText("En dehors de SC");
                                                
						try {
							FileLock lock = channel.tryLock();
				        } catch (OverlappingFileLockException e) {
				        	content = content + " locked";
				            // File is already locked in this thread or virtual machine
				        }
						//lock.release();
						channel.close();
						// if file doesnt exists, then create it
						if (!file.exists()) {
							file.createNewFile();
						}
						FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
						BufferedWriter bw = new BufferedWriter(fw);
						bw.write(content);
						bw.close();
						
					} catch (IOException e) {
						e.printStackTrace();
					}
			//	} //leaving CS
					try {
						System.out.println("exiting....");
                                              //  this.jButton1.setText("exiting....");
					sleep = ran.nextInt(100);
					Thread.sleep(sleep);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				distributedMutex.csLeave(  this.jButton1, this.jButton3);
				counter++;
				
				
				if(counter>=70)
					break;
			}
			if(counter>=70)
				break;
	}
		distributedMutex.close();
		System.out.println("Exiting from main method");
	}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        Main m = new Main(); 
        m.setVisible(true); 
        m.Aplication(args[0]); 
       /*jButton1.setText("fvdfdx");*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
